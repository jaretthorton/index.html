<!DOCTYPE html>
<meta charset="utf-8">
<style>
body {
  font: 10px sans-serif;
}
.bar rect {
  shape-rendering: crispEdges;
}
.bar text {
  fill: #999999;
}
.axis path, .axis line {
  fill: none;
  stroke: #000;
  shape-rendering: crispEdges;
}
</style>
<body>
<script src="http://d3js.org/d3.v3.min.js"></script>
<script>
// Set the base bar color
var color = "green";
// A comma-separated list of the years, using negative numbers for BCE
var years = [-509, -450, -503, -509, -450, -450, -425, -450, -450, -450, -499, -425, -499, -450, -425, -425, -493, -425, -485, -425, -450, -463, -450, -425, -425, -425, -425, -425, -425, -425, -425, -425,
-425,
-425,
-463,
-425,
-425,
-425,
-425,
-425,
-425,
-425,
-425,
-400,
-425,
-425,
-425,
-460,
-425,
-425,
-425,
-425,
-425,
-425,
-425,
-425,
-425,
-425,
-425,
-425,
-425,
-425,
-425,
-453,
-480,
-425,
-400,
-400,
-477,
-425,
-483,
-375,
-425,
-425,
-480,
-425,
-425,
-463,
-478,
-476,
-425,
-425,
-425,
-425,
-400,
-425,
-425,
-400,
-400,
-400,
-400,
-473,
-400,
-464,
-400,
-472,
-449,
-375,
-400,
-400,
];
// A formatter for counts.
var formatCount = d3.format(",.0f");
// Sets the margins
var margin = {top: 40, right: 30, bottom: 60, left: 30},
    width = 960 - margin.left - margin.right,
    height = 500 - margin.top - margin.bottom;
// Round the minimum year down to the nearest 50 and the maximum year up to the nearest 50
var max = Math.ceil(d3.max(years) / 50) * 50;
var min = Math.floor(d3.min(years) / 50) * 50;
var x = d3.scale.linear()
      .domain([min, max])
      .range([0, width]);
// Generate a histogram using bins of length 50 years.
var data = d3.layout.histogram()
      .bins(d3.range(min, max, 25))
    (years);
// Set the bar coloring
var yMax = d3.max(data, function(d){return d.length});
var yMin = d3.min(data, function(d){return d.length});
var colorScale = d3.scale.linear()
            .domain([yMin, yMax])
            .range([d3.rgb(color).brighter(), d3.rgb(color).darker()]);
var y = d3.scale.linear()
    .domain([0, yMax])
    .range([height, 0]);
// Ensure the axis uses 50 year increments
var xAxis = d3.svg.axis()
    .scale(x)
    .orient("bottom")
    .tickValues(d3.range(min, max, 50));
var svg = d3.select("body").append("svg")
    .attr("width", width + margin.left + margin.right)
    .attr("height", height + margin.top + margin.bottom)
  .append("g")
    .attr("transform", "translate(" + margin.left + "," + margin.top + ")");
var bar = svg.selectAll(".bar")
    .data(data)
  .enter().append("g")
    .attr("class", "bar")
    .attr("transform", function(d) { return "translate(" + x(d.x) + "," + y(d.y) + ")"; });
bar.append("rect")
    .attr("x", 1)
    .attr("width", (x(data[0].dx) - x(0)) - 1)
    .attr("height", function(d) { return height - y(d.y); })
    .attr("fill", function(d) { return colorScale(d.y) });
bar.append("text")
    .attr("dy", ".75em")
    .attr("y", -12)
    .attr("x", (x(data[0].dx) - x(0)) / 2)
    .attr("text-anchor", "middle")
    .text(function(d) { return formatCount(d.y); });
svg.append("g")
    .attr("class", "x axis")
    .attr("transform", "translate(0," + height + ")")
    .call(xAxis);
// Graph title
svg.append("text")
        .attr("x", (width / 2))             
        .attr("y", 0 - (margin.top / 2))
        .attr("text-anchor", "middle")  
        .style("font-size", "16px") 
        .text("People Who Held the Position of Preator per 25 Years");
// Axis label
svg.append("text")
    .attr("class", "x label")
    .attr("text-anchor", "middle")
    .attr("x", width / 2)
    .attr("y", height + 50)
    .text("Year");
</script>
